--CÁC TRIGGER TỰ ĐỘNG CẬP NHẬT

--TRGGER 1: TỰ ĐỘNG TẠO MÃ KHÁM CHO BÊNH NHÂN MỚI
CREATE TRIGGER TRG_IN_KHAMCHIDINH ON BENHNHAN AFTER INSERT
AS
BEGIN
    INSERT INTO KHAMCHIDINH (MABENHNHAN, MANHANVIEN, NGAYKHAM, GIAKHAM)
    SELECT 
        INSERTED.MABENHNHAN, NULL, GETDATE(), 150000.0000
    FROM INSERTED
END
GO


--TRIGGER 2: TỰ ĐỘNG TẠO MÃ ĐƠN THUỐC MỚI CHO BÊNH NHÂN MỚI
CREATE TRIGGER TRG_IN_DONTHUOC ON KHAMCHIDINH AFTER INSERT
AS
BEGIN
    INSERT INTO DONTHUOC (MAKHAM, MANHANVIEN, NGAYXUATDONTHUOC, GIADONTHUOC)
    SELECT 
        INSERTED.MAKHAM, NULL, NULL, 000000.0000
    FROM INSERTED
END;
GO


--TRIGGER 3: TỰ ĐỘNG TẠO HÓA ĐƠN MỚI CHO BÊNH NHÂN MỚI
CREATE TRIGGER TRG_IN_HOADON ON BENHNHAN AFTER INSERT
AS
BEGIN
    INSERT INTO HOADON (MABENHNHAN, TENBN, HOBN, TENBENH, MAKHAM,
	MACHUABENH, MADONTHUOC, NGAYXUATHOADON, TONGTIEN) 
    SELECT 
        INSERTED.MABENHNHAN, TENBN, HOBN, NULL, NULL, NULL, NULL, NULL, 150000.0000
    FROM INSERTED
END;
GO


--TRIGGER 4: TỰ ĐỘNG CẬP NHẬT MÃ KHÁM CHỈ ĐỊNH CHO HÓA ĐƠN CỦA BỆNH NHÂN ĐÓ
CREATE TRIGGER TRG_IN_HOADON_KHAMCHIDINH ON KHAMCHIDINH AFTER INSERT, UPDATE 
AS
BEGIN
    UPDATE HOADON 
	SET MAKHAM = INSERTED.MAKHAM
    FROM INSERTED JOIN HOADON ON HOADON.MABENHNHAN = INSERTED.MABENHNHAN
	WHERE HOADON.MABENHNHAN = INSERTED.MABENHNHAN
END;
GO


-- TRIGGER 5: TỰ ĐỘNG CẬP NHẬT HÓA ĐƠN KHI CÓ THAY ĐỔI THÔNG TIN Ở BỆNH NHÂN 
CREATE TRIGGER UP_HOADON_BENHNHAN ON BENHNHAN AFTER UPDATE
AS
BEGIN
	UPDATE HOADON
	SET
		HOADON.MABENHNHAN = BENHNHAN.MABENHNHAN,
		HOADON.HOBN = BENHNHAN.HOBN,
		HOADON.TENBN = BENHNHAN.TENBN
	FROM HOADON JOIN BENHNHAN
	ON HOADON.MABENHNHAN = BENHNHAN.MABENHNHAN
END


-- TRIGGER 6: TỰ ĐỘNG CẬP NHẬT TÊN BỆNH VÀ TỔNG TIỀN CHO HÓA ĐƠN CỦA BỆNH NHÂN ĐÓ
CREATE TRIGGER TRG_IN_TENBENH_HOADON ON KHAMCHIDINH AFTER UPDATE
AS
BEGIN
    UPDATE HOADON
    SET 
				HOADON.TENBENH = B.TENBENH, HOADON.TONGTIEN =  I.GIAKHAM
    FROM HOADON
	JOIN inserted I ON I.MABENHNHAN = HOADON.MABENHNHAN
	JOIN KHAMCHITIET KCT ON KCT.MAKHAM = I.MAKHAM
    JOIN BENH B ON B.MABENH = KCT.MABENH
    WHERE HOADON.MABENHNHAN = I.MABENHNHAN
END
GO


--TRIGGER 7: TỰ ĐỘNG CẬP NHẬT MÃ CHỮA BỆNH VÀO HÓA ĐƠN CHO BỆNH NHÂN ĐÓ
CREATE TRIGGER TRG_IN_MACHUA_HOADON ON CHUABENH AFTER INSERT, UPDATE
AS
BEGIN
		UPDATE HOADON
		SET
					HOADON.MACHUABENH = I.MACHUABENH
		FROM HOADON JOIN inserted I 
		ON I.MAKHAM = HOADON.MAKHAM
END


--TRIGGER 8: TỰ ĐỘNG CẬP NHẬT TỔNG GIÁ HÓA ĐƠN KHI Y TÁ NHẬP/CẬP NHẬT GIÁ VÀO BẢNG CHỮA BỆNH
CREATE TRIGGER TRG_CHUABENH_HOADON ON CHUABENH FOR UPDATE, INSERT
AS	
BEGIN
		UPDATE HOADON
		SET		
				HOADON.TONGTIEN =  HOADON.TONGTIEN + I.GIACHUA 
		FROM HOADON JOIN inserted I
		ON HOADON.MAKHAM = I.MAKHAM
END


--TRIGGER 9: TỰ ĐỘNG CẬP NHẬT MÃ ĐƠN THUỐC VÀO HÓA ĐƠN CHO BỆNH NHÂN ĐÓ
CREATE TRIGGER TRG_IN_MADONTHUOC_HOADON ON DONTHUOC AFTER UPDATE
AS
BEGIN
		UPDATE HOADON
		SET
					HOADON.MADONTHUOC = I.MADONTHUOC
		FROM HOADON JOIN inserted I 
		ON I.MAKHAM = HOADON.MAKHAM
END


--TRIGGER 10: TỰ ĐỘNG CẬP NHẬT TỔNG GIÁ HÓA ĐƠN KHI BÁC SĨ CẬP NHẬT GIÁ VÀO BẢNG ĐƠN THUỐC
CREATE TRIGGER TRG_DONTHUOC_HOADON ON DONTHUOC FOR UPDATE
AS	
BEGIN
		UPDATE HOADON
		SET		
				HOADON.TONGTIEN =  HOADON.TONGTIEN + I.GIADONTHUOC 
		FROM HOADON JOIN inserted I
		ON HOADON.MAKHAM = I.MAKHAM
END




--TRIGGER KIỂM TRA DỮ LIỆU


--TRIGGER 11: KIỂM TRA CHỈ CÓ BÁC SĨ CHỈ ĐỊNH MỚI ĐƯỢC PHÂN CÔNG Ở BẢNG KHÁM
CREATE TRIGGER KHAM_BSCHIDINH ON KHAMCHIDINH AFTER UPDATE
AS
BEGIN
    IF EXISTS (
       SELECT * 
        FROM inserted I
		WHERE I.MANHANVIEN <> 10000005
    )
    BEGIN
        RAISERROR('CHỈ CÓ BÁC SĨ CHỈ ĐỊNH MỚI ĐẢM NHẬN VAI TRÒ KHÁM CHỈ ĐỊNH', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END
END
GO


--TRIGGER 12: KIỂM TRA CHỈ CÓ BÁC SĨ MỚI ĐƯỢC PHÂN CÔNG Ở CHỮA BỆNH
CREATE TRIGGER CHUA_BSCHUYENMON ON CHUABENHCHITIET FOR INSERT, UPDATE
AS
BEGIN
    IF EXISTS (
       SELECT * 
        FROM inserted I
		WHERE I.MANHANVIEN = 10000005
		OR  I.MANHANVIEN = 10000006
    )
    BEGIN
        RAISERROR('CHỈ CÓ BÁC SĨ CHUYÊN MÔN MỚI ĐẢM NHẬN CHỮA BỆNH', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END
END
GO


--TRIGGER 13: KIỂM TRA GIÁ KHÁM Y TÁ CẬP NHẬT PHẢI BẰNG GIÁ PHƯƠNG THỨC + GIÁ ĐĂNG KÝ KHÁM (CHỨC NĂNG CỦA Y TÁ)
CREATE TRIGGER TRG_UP_GIAKHAM ON KHAMCHIDINH AFTER UPDATE
AS 
BEGIN 
	IF NOT EXISTS ( SELECT * FROM inserted I 
					JOIN KHAMCHITIET KCT ON I.MAKHAM = KCT.MAKHAM
					JOIN KHAMPHUONGTHUC KPT ON KCT.MAPHUONGTHUCKHAM = KPT.MAPHUONGTHUCKHAM
				WHERE I.GIAKHAM = (KPT.GIAKHAM + 150000.000)
				)
	BEGIN
        RAISERROR('GIÁ KHÁM KHÔNG PHÙ HỢP VỚI GIÁ PHƯƠNG THỨC KHÁM (BAO GỒM GIÁ PHƯƠNG THỨC VÀ GIÁ ĐĂNG KÝ KHÁM)', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END
END
GO


--TRIGGER 14: KIỂM TRA GIÁ CHỮA BỆNH PHÙ HỢP VỚI GIÁ PHƯƠNG THỨC CHỮA BỆNH (CHỨC NĂNG CỦA Y TÁ VÀ BÁC SĨ)
CREATE TRIGGER TRG_GIACHUA ON CHUABENH AFTER INSERT, UPDATE
AS 
BEGIN 
	IF NOT EXISTS ( SELECT * FROM inserted I 
					JOIN CHUABENHPHUONGTHUC CBPT ON I.MAPHUONGTHUCCHUA = CBPT.MAPHUONGTHUCCHUA
				WHERE I.GIACHUA >= CBPT.GIACHUA
				)
	BEGIN
        RAISERROR('GIÁ CHỮA BỆNH KHÔNG PHÙ HỢP VỚI GIÁ PHƯƠNG THỨC CHỮA BỆNH (PHẢI LỚN HƠN HOẶC BẰNG GIÁ NIÊM YẾT)', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END
END
GO


--TRIGGER 15: KIỂM TRA GIÁ ĐƠN THUỐC PHÙ HỢP VỚI GIÁ THUỐC NHÂN SỐ LƯỢNG THUỐC
CREATE TRIGGER TRG_UP_GIATHUOC ON DONTHUOC AFTER UPDATE
AS 
BEGIN 
    IF EXISTS (
        SELECT *
        FROM inserted I 
        JOIN DONTHUOCCHITIET DTCT ON I.MADONTHUOC = DTCT.MADONTHUOC
        JOIN THUOC T ON DTCT.MATHUOC = T.MATHUOC
        GROUP BY I.MAKHAM, I.MADONTHUOC, I.GIADONTHUOC
        HAVING I.GIADONTHUOC <> SUM (T.GIATHUOC * DTCT.SOLUONG)
    )
    BEGIN
        RAISERROR('GIÁ ĐƠN THUỐC KHÔNG PHÙ HỢP VỚI GIÁ THUỐC VÀ SỐ LƯỢNG THUỐC TRONG ĐƠN', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END
END
GO


--TRIGGER 16: KIỂM TRA THỜI GIAN CHỮA BỆNH PHẢI SAU THỜI GIAN KHÁM
CREATE TRIGGER TRG_THOIGIANCHUA ON CHUABENH AFTER INSERT, UPDATE
AS
BEGIN
    IF EXISTS (
        SELECT *
        FROM inserted I
        JOIN KHAMCHIDINH K ON K.MAKHAM = I.MAKHAM
        WHERE I.NGAYCHUA <= K.NGAYKHAM
    )
    BEGIN
        RAISERROR('THỜI GIAN CHỮA BỆNH PHẢI BẰNG HOẶC SAU THỜI GIAN KHÁM', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END
END


--TRIGGER 17: KIỂM TRA THỜI GIAN KÊ THUỐC PHẢI SAU THỜI GIAN KHÁM
CREATE TRIGGER TRG_THOIGIANKETHUOC ON DONTHUOC AFTER UPDATE
AS
BEGIN
    IF EXISTS (
        SELECT *
        FROM inserted I
        JOIN KHAMCHIDINH K ON K.MAKHAM = I.MAKHAM
        WHERE I.NGAYXUATDONTHUOC <= K.NGAYKHAM
    )
    BEGIN
        RAISERROR('THỜI GIAN KÊ ĐƠN THUỐC PHẢI BẰNG HOẶC SAU THỜI GIAN KHÁM', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END
END


--TRIGGER 18: KIỂM TRA BÁC SĨ THỰC HIỆN CHỮA BỆNH CÓ CHUYÊN MÔN PHÙ HỢP VỚI LOẠI BỆNH HAY KHÔNG
CREATE TRIGGER TRG_CHUABENH_CHUYENMON ON CHUABENHCHITIET  AFTER INSERT, UPDATE
AS 
BEGIN
    DECLARE @MANHANVIEN [numeric](8, 0),
	@MACHUYENMON [numeric](3, 0)
    SELECT @MANHANVIEN = MANHANVIEN FROM INSERTED
	SELECT @MACHUYENMON = MACHUYENMON FROM NHANVIEN WHERE MANHANVIEN = @MANHANVIEN
    IF NOT EXISTS (
        SELECT * 
        FROM INSERTED I
        JOIN CHUABENH NV ON NV.MACHUABENH = I.MACHUABENH
        JOIN KHAMCHIDINH KCD ON KCD.MAKHAM = NV.MAKHAM
        JOIN KHAMCHITIET KCT ON KCT.MAKHAM = KCD.MAKHAM
		JOIN BENH B ON B.MABENH = KCT.MABENH
        WHERE I.MANHANVIEN = @MANHANVIEN
        AND B.PHANLOAI = @MACHUYENMON
    )
    BEGIN
        RAISERROR('KHÔNG THỂ CHỈ ĐỊNH BÁC SĨ CÓ CHUYÊN MÔN KHÔNG PHÙ HỢP', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END
END
GO


--TRIGGER 19: KIỂM TRA BÁC SĨ THỰC HIỆN KÊ THUỐC CÓ CHUYÊN MÔN PHÙ HỢP VỚI LOẠI BỆNH HAY KHÔNG
CREATE TRIGGER TRG_DONTHUOC_CHUYENMON ON DONTHUOC AFTER UPDATE
AS 
BEGIN
	DECLARE @MANHANVIEN [numeric](8, 0),
	@MACHUYENMON [numeric](3, 0)
    SELECT @MANHANVIEN = MANHANVIEN FROM INSERTED
	SELECT @MACHUYENMON = MACHUYENMON FROM NHANVIEN WHERE MANHANVIEN = @MANHANVIEN
	 IF NOT EXISTS (SELECT * FROM inserted I
		JOIN KHAMCHIDINH KCD ON KCD.MAKHAM = I.MAKHAM
        JOIN KHAMCHITIET KCT ON KCT.MAKHAM = KCD.MAKHAM
		JOIN BENH B ON B.MABENH = KCT.MABENH
        WHERE I.MANHANVIEN = @MANHANVIEN
        AND B.PHANLOAI = @MACHUYENMON
    )
	 BEGIN
        RAISERROR('KHÔNG THỂ CHỈ ĐỊNH BÁC SĨ CÓ CHUYÊN MÔN KHÔNG PHÙ HỢP', 16, 1)
        ROLLBACK TRANSACTION
        RETURN;
    END
END
GO



--TRIGGER KIỂM TRA VÀ XÓA 


-- TRIGGER 20: KIỂM TRA VÀ XÓA NHÂN VIÊN
CREATE TRIGGER TRG_XOANHANVIEN ON NHANVIEN INSTEAD OF DELETE
AS
BEGIN
    DECLARE @MANHANVIEN numeric(8, 0);
    DECLARE @MAPHONGBAN numeric(3, 0);

    SELECT @MANHANVIEN = DELETED.MANHANVIEN, 
           @MAPHONGBAN = DELETED.MAPHONGBAN
    FROM DELETED;

    -- NẾU PHÒNG BAN ĐÓ CÓ NHIỀU HƠN MỘT NHÂN VIÊN
    IF EXISTS (SELECT COUNT(*) 
               FROM NHANVIEN NV, PHONGBAN PB
               WHERE PB.MAPHONGBAN = @MAPHONGBAN
			   AND NV.MAPHONGBAN = PB.MAPHONGBAN
			   AND NV.MANHANVIEN <> @MANHANVIEN	
			   GROUP BY NV.MAPHONGBAN
			HAVING COUNT(*) > 0)
    BEGIN
		ALTER TABLE NHANVIEN NOCHECK CONSTRAINT FK_NHANVIEN_PHONGBAN,FK_NHANVIEN_CHUYENMON
		ALTER TABLE CHUBENHCHITIET NOCHECK CONSTRAINT FK_CHUABENHCHITIET_NHANVIEN
		ALTER TABLE KHAMCHIDINH NOCHECK CONSTRAINT FK_KHAMCHIDINH_NHANVIEN
		ALTER TABLE DONTHUOC NOCHECK CONSTRAINT FK_DONTHUOC_NHANVIEN

        DELETE FROM NHANVIEN
        WHERE MANHANVIEN = @MANHANVIEN;

		ALTER TABLE NHANVIEN CHECK CONSTRAINT FK_NHANVIEN_PHONGBAN, FK_NHANVIEN_CHUYENMON
		ALTER TABLE CHUBENHCHITIET CHECK CONSTRAINT FK_CHUABENHCHITIET_NHANVIEN
		ALTER TABLE KHAMCHIDINH CHECK CONSTRAINT FK_KHAMCHIDINH_NHANVIEN
		ALTER TABLE DONTHUOC CHECK CONSTRAINT FK_DONTHUOC_NHANVIEN
    END
    ELSE
    BEGIN
        -- NẾU PHÒNG BAN CHỈ CÓ MỘT NHÂN VIÊN
        RAISERROR ('KHÔNG THỂ XÓA NHÂN VIÊN, PHÒNG BAN NÀY CHỈ CÓ MỘT NHÂN VIÊN', 16, 1)
    END
END
GO


-- TRIGGER 21: KIỂM TRA VÀ XÓA THÔNG TIN BỆNH NHÂN
CREATE TRIGGER TRG_XOABENHNHAN ON BENHNHAN INSTEAD OF DELETE
AS
BEGIN
    SET NOCOUNT ON;
    -- KIỂM TRA THÔNG TIN BỆNH NHÂN TỪ NGÀY HOÀN THÁNH KHÁM (NGÀY XUẤT HÓA ĐƠN) TRONG VÒNG 365 NGÀY
    IF EXISTS (
        SELECT *
        FROM DELETED D
        JOIN HOADON HD ON D.MABENHNHAN = HD.MABENHNHAN
        WHERE DATEDIFF(DAY, HD.NGAYXUATHOADON, GETDATE()) < 365
    )
    BEGIN
        -- NẾU CÓ THÔNG TIN TRONG 365 NGÀY THÌ KHÔNG CHO PHÉP XÓA
        RAISERROR ('KHÔNG THỂ XÓA BỆNH NHÂN. THÔNG TIN LƯU TRỮ CHƯA VƯỢT THỜI HẠN 365 NGÀY', 16, 1);
    END
    ELSE
    BEGIN
        -- NẾU KHÔNG CÓ THÔNG TIN TRONG 365 NGÀY THÌ ĐƯỢC PHÉP XÓA
		ALTER TABLE KHAMCHIDINH NOCHECK CONSTRAINT FK_KHAMCHIDINH_BENHNHAN
		ALTER TABLE HOADON NOCHECK CONSTRAINT FK_HOADON_BENHNHAN

        DELETE FROM BENHNHAN
        WHERE MABENHNHAN IN (SELECT MABENHNHAN FROM DELETED)

		ALTER TABLE KHAMCHIDINH CHECK CONSTRAINT FK_KHAMCHIDINH_BENHNHAN
		ALTER TABLE HOADON CHECK CONSTRAINT FK_HOADON_BENHNHAN
    END
END
GO
